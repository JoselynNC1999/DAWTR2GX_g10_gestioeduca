name: CI Workflow for GestioEduca

on:
  push:
    branches:
      - dev  # El workflow se activa cuando haces un push a 'dev'
  pull_request:
    branches:
      - dev  # El workflow tambiÃ©n se activa cuando haces un PR hacia 'dev'

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.2.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: gestioeduca
          MYSQL_USER: user
          MYSQL_PASSWORD: user
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    # 1. Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # 2. Set up Docker
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # 3. Build and start containers with docker-compose
    - name: Build and start services
      run: |
        docker-compose up -d --build
      env:
        MYSQL_ROOT_PASSWORD: root
        MYSQL_DATABASE: gestioeduca
        MYSQL_USER: user
        MYSQL_PASSWORD: user

    # 4. Run Laravel tests (Backend)
    - name: Run backend tests
      run: |
        docker exec backend php artisan migrate --force
        docker exec backend php artisan test

    # 5. Run Vue.js tests (Frontend)
    - name: Run frontend tests
      run: docker exec frontend npm run test

    # 6. Stop and clean up Docker containers
    - name: Stop and clean containers
      run: docker-compose down --volumes
